printf的用法:
（1)d格式符。用来输出十进制整数。有以下方法：
1 %d。按十进制整型数据的实际长度输出。
2 %md。m为指定的输出字段的宽度。如果数据的位数小于m，则左端补以空格，诺大于m，则按照实际位数输出，例如：
printf("%4d,%d",a,b);
诺a=123,b=12345,则输出结果为
 空格123，12345
 3 %ld。输出长整型数据，例如：
 long a =135790;
 printf("%ld",a);
scanf（“%lf”,&a）;
printf("%f",a);//输入用%lf,输出用%f.
 如果用%d输出，就会发生错误，应为整型数据的范围为-32768~32767.
 (2)O格式符。以八进制整数形式输出。
 （3）x格式符。以十六进制形式输出整数
 （4）u格式符。用来输出unsigned型数据，即无符号数，以十进制整数形式输出。
 （5）c格式符。用来输出一个字符。
 （6）s格式符，用来输出一个字符串。
 1 %s。例如：
 printf（"%s","CHINA");
 输出字符串为CHINA
 2 ；%ms,输出的字符串站m列，如字符串本身长度大于m，则突破m的限制，将字符串全部输出
 。诺串小于m,则左补空格。
 3； %-ms,如果串长小于m，则在m列范围内，字符串向左靠，右补空格
 4； %m.ns，输出占m列，但只取字符串中左端n个字符。这n个字符输出在m列的右侧，左补空格。
 5； %-m.ns，其中m,n含义同上，n个字符输出在m列范围的左侧。右补空格。如果n>m，则m自动取n值，及保证n个字符
 正常输出。
 （7）f格式符。用来输出实数（包括单，双精度），以小数形式输出。有以下几种用法。
 1； %f，在输出的数字中并非全部数字都是有效数字。单精度实数的有效位数一般为6位，给出小数6位。
 ；单精度只有前7位数字是有效的。千万不要以为计算机输出的数都是准确的。(一般系统处理的方法是整数部分全部输出，小数部分输出六位)
 双精度也可以用%f格式输出他的有效位一般为15位 ，给出小数6位
 2； 可以用指定数据宽度和小数%m.nf，指定输出的数据占m列，其中有n为小数。如果数值长度小于m,则左端补空格。（）
 3； %-m.nf与%m.nf只是使输出的数值向左靠，右端补空格。